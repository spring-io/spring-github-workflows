name: Edit & Merge Dependabot PR

on:
  workflow_call:
    inputs:
      developmentGroup:
        description: 'The Dependabot update group for development dependencies'
        default: 'development-dependencies'
        required: false
        type: string
      developmentLabel:
        description: 'The issue label for this development dependencies pull request'
        default: 'type: task'
        required: false
        type: string
      dependenciesLabel:
        description: 'The issue label for regular dependency upgrade pull request'
        default: 'type: dependency-upgrade'
        required: false
        type: string
      autoMerge:
        description: 'Merged automatically without setting Milestone to the pull request'
        default: false
        required: false
        type: boolean
      autoMergeSnapshots:
        description: 'Whether upgrades to SNAPSHOTs (usually after release against Milestone) are going to be merged automatically'
        default: false
        required: false
        type: boolean
      mergeArguments:
        description: 'The arguments to pass to the gh pr merge command'
        required: false
        type: string

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  WORKFLOWS_REF: main

jobs:
  merge-dependabot-pr:
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'dependabot[bot]'
    steps:

      - uses: actions/checkout@v4
        with:
          show-progress: false

      - name: Checkout Common Repo
        uses: actions/checkout@v4
        with:
          repository: spring-io/spring-github-workflows
          path: .github/spring-github-workflows
          show-progress: false
          ref: ${{ env.WORKFLOWS_REF }}

      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
         github-token: ${{ env.GH_TOKEN }}

      # Dependabot does not have ability to let us skip from '-SNAPSHOT' updates.
      # The problem happens when there is a GA for snapshot we are using right now.
      # For example, we have a '1.0.0-SNAPSHOT' after previous update from the '1.0.0-RC1'.
      # Now that dependency has gone to '1.0.0' GA, so we would expect an update like '1.0.0-SNAPSHOT -> 1.0.0',
      # but Dependabot does '1.0.0-SNAPSHOT -> 1.0.1-SNAPSHOT'.
      # This is wrong and causes extra burden in manual changes and commit history.
      # Therefore, closing such a PR as invalid.
      # See more info in: https://stackoverflow.com/questions/79204574/how-to-make-dependabot-to-not-update-from-snapshot
      - name: Close if SNAPSHOT to SNAPSHOT update
        if: ${{ endsWith(steps.metadata.outputs.previous-version, '-SNAPSHOT') && endsWith(steps.metadata.outputs.new-version, '-SNAPSHOT') }}
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "status: invalid" --remove-milestone --remove-label "${{ inputs.dependenciesLabel }}"
          
          CLOSE_COMMENT="Upgrade from ${{ steps.metadata.outputs.previous-version }} to ${{ steps.metadata.outputs.new-version }} is not allowed"
          
          gh pr close ${{ github.event.pull_request.number }} --comment $CLOSE_COMMENT 
          
          gh run cancel ${{ github.run_id }}
          echo "::warning title=Cannot merge::$CLOSE_COMMENT"
          gh run watch ${{ github.run_id }}

      - name: Add a label for development dependencies pull request
        if: ${{ steps.metadata.outputs.dependency-group == inputs.developmentGroup || endsWith(steps.metadata.outputs.new-version, '-SNAPSHOT') }}
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "${{ inputs.developmentLabel }}" --remove-label "${{ inputs.dependenciesLabel }}"

      - name: Determine auto-merge
        id: is-auto-merge
        run: |
          AUTO_MERGE=${{ inputs.autoMerge || (inputs.autoMergeSnapshots && endsWith(steps.metadata.outputs.new-version, '-SNAPSHOT')) }}
          if [ -z $AUTO_MERGE ]
          then
            PR_MILESTONE=$(gh pr view ${{ github.event.pull_request.number }} --json milestone -q '.milestone.number')
            if [ $PR_MILESTONE ]
            then
              AUTO_MERGE=true
            fi
          fi
          echo autoMerge=$AUTO_MERGE >> $GITHUB_OUTPUT

      - name: Find Scheduled Milestone
        id: find-milestone
        if: steps.is-auto-merge.outputs.autoMerge == 'false'
        uses: ./.github/spring-github-workflows/.github/actions/spring-scheduled-milestone-for-branch

      - name: Set Milestone to Dependabot pull request
        if: steps.is-auto-merge.outputs.autoMerge == 'false'
        run: |
          MILESTONE=${{ steps.find-milestone.outputs.milestone }}
          
          if [ -z $MILESTONE ]
          then
            gh run cancel ${{ github.run_id }}
            echo "::warning title=Cannot merge::No scheduled milestone for ${{ steps.find-milestone.outputs.currentVersion }} version"
            gh run watch ${{ github.run_id }}
          else
            gh pr edit ${{ github.event.pull_request.number }} --milestone $MILESTONE
          fi

      - name: Merge Dependabot pull request
        if: ${{ !cancelled() }}
        run: gh pr merge ${{ github.event.pull_request.number }} ${{ inputs.mergeArguments }}
