name: Build with Maven and Stage Release to Artifactory

on:
  workflow_call:
    inputs:
      releaseVersion:
        description: 'Release version like 3.0.0-M1, 3.1.0-RC1, 3.2.0 etc.'
        required: true
        type: string
      mavenArgs:
        description: 'Additional mvn command arguments: goals, plugins etc. The `install` is included.'
        required: false
        type: string

    outputs:
      buildName:
        description: 'Artifactory Build Name'
        value: ${{ jobs.staging-to-artifactory-with-maven.outputs.buildName }}
      buildNumber:
        description: 'Artifactory Build Number'
        value: ${{ jobs.staging-to-artifactory-with-maven.outputs.buildNumber }}

    secrets:
      GH_ACTIONS_REPO_TOKEN:
        required: true
      JF_ARTIFACTORY_SPRING:
        required: true

env:
  JF_ENV_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}

jobs:
  staging-to-artifactory-with-maven:
    runs-on: ubuntu-latest
    outputs:
      buildName: ${{ steps.configure-jfrog.outputs.buildName }}
      buildNumber: ${{ steps.configure-jfrog.outputs.buildNumber }}
    steps:

      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACTIONS_REPO_TOKEN }}
          show-progress: false

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: 'maven'

      - uses: jfrog/setup-jfrog-cli@v3

      - name: Configure JFrog Cli
        id: configure-jfrog
        run: |
          jf mvnc \
            --repo-resolve-releases=libs-milestone \
            --repo-resolve-snapshots=snapshot \
            --repo-deploy-releases=libs-staging-local \
            --repo-deploy-snapshots=libs-snapshot-local
          
          buildName=${{ github.event.repository.name }}-${{ inputs.releaseVersion }}
          buildNumber=${{ github.run_number }}
          
          echo JFROG_CLI_BUILD_NAME=$buildName >> $GITHUB_ENV
          echo JFROG_CLI_BUILD_NUMBER=$buildNumber >> $GITHUB_ENV
          echo buildName=$buildName >> $GITHUB_OUTPUT
          echo buildNumber=$buildNumber >> $GITHUB_OUTPUT
          echo "::notice title=Artifactory Build Name & Number::$buildName/$buildNumber"

      - name: Set Release Version
        run: |
          mvn versions:set -DnewVersion=${{ inputs.releaseVersion }} -DgenerateBackupPoms=false -DprocessAllModules=true -B -ntp

      - name: Build and Publish
        run: |
          jf mvn install -B -ntp ${{ inputs.mavenArgs }}
          jf rt build-publish

      - name: Capture Test Results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/target/surefire-reports/**/*.*'
          retention-days: 3

      - name: Tag Release and Next Development Version
        run: |
          git config --global user.name 'Spring Builds'
          git config --global user.email 'builds@springframework.org'
          git commit -a -m "[artifactory-release] Release version ${{ inputs.releaseVersion }}"
          git tag "v${{ inputs.releaseVersion }}"
          git push --tags origin
          mvn build-helper:parse-version versions:set \
            -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${{ (contains(inputs.releaseVersion, '-M') || contains(inputs.releaseVersion, '-RC')) && '${parsedVersion.incrementalVersion}' || '${parsedVersion.nextIncrementalVersion}' }}'-SNAPSHOT \
            -DgenerateBackupPoms=false -DprocessAllModules=true -B -ntp
          git commit -a -m "[artifactory-release] Next development version"
          git push origin
