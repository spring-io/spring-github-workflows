name: Perform Release with Gradle and Artifactory

on:
  workflow_call:
    inputs:
      buildToolArgs:
        description: 'Additional Gradle command arguments: tasks, options etc. The `build` and `artifactoryPublish` for Gradle are included.'
        required: false
        type: string
      artifactoryUrl:
        description: 'The Artifactory Server'
        required: false
        type: string
      stagingRepository:
        description: 'The Artifactory Repository to stage artifacts to'
        required: false
        type: string
        default: libs-staging-local
      targetMilestoneRepository:
        description: 'The Artifactory Repository to promote the milestone build to'
        required: false
        type: string
        default: libs-milestone-local
      targetReleaseRepository:
        description: 'The Artifactory Repository to promote the release build to'
        required: false
        type: string
        default: libs-release-local
      artifactoryProjectKey:
        description: 'The Artifactory project key'
        required: false
        type: string
      verifyStagedWorkflow:
        description: 'A workflow name in the target project to dispatch against staged artifacts. The `releaseVersion` must be a workflow input.'
        required: false
        type: string
        default: verify-staged-artifacts.yml
      runner:
        description: 'The runner for job'
        required: false
        type: string
        default: ubuntu-latest
      bundleName:
        description: 'The Artifactory Bundle Name'
        required: false
        type: string
      deployMilestoneToCentral:
        description: 'Whether to deploy Milestone release to Maven Central'
        default: false
        required: false
        type: boolean

    secrets:
      DEVELOCITY_ACCESS_KEY:
        required: false
      SPRING_RELEASE_CHAT_WEBHOOK_URL:
        required: false
      GH_ACTIONS_REPO_TOKEN:
        required: true
      OSSRH_S01_TOKEN_USERNAME:
        required: false
      OSSRH_S01_TOKEN_PASSWORD:
        required: false
      OSSRH_STAGING_PROFILE_NAME:
        required: false
      CENTRAL_TOKEN_USERNAME:
        required: false
      CENTRAL_TOKEN_PASSWORD:
        required: false
      GPG_PASSPHRASE:
        required: false
      GPG_PRIVATE_KEY:
        required: false
      JF_ARTIFACTORY_SPRING:
        required: true
      ARTIFACTORY_USERNAME:
        required: true
      ARTIFACTORY_PASSWORD:
        required: true

jobs:
  releaseVersion:
    uses: ./.github/workflows/spring-find-release-version.yml

  staging:
    needs: releaseVersion
    name: Stage ${{ needs.releaseVersion.outputs.releaseVersion }}
    uses: ./.github/workflows/spring-artifactory-gradle-build.yml
    with:
      releaseVersion: ${{ needs.releaseVersion.outputs.releaseVersion }}
      gradleTasks: ${{ inputs.buildToolArgs }}
      artifactoryUrl: ${{ inputs.artifactoryUrl }}
      targetRepository: ${{ inputs.stagingRepository }}
      artifactoryProjectKey: ${{ inputs.artifactoryProjectKey }}
      runner: ${{ inputs.runner }}
    secrets: inherit

  verify-staged:
    needs: [ releaseVersion, staging ]
    name: Verify ${{ needs.releaseVersion.outputs.releaseVersion }}
    runs-on: ${{ inputs.runner }}
    steps:
      - uses: actions/checkout@v5
        with:
          show-progress: false

      - name: Checkout Common Repo
        uses: actions/checkout@v5
        with:
          repository: spring-io/spring-github-workflows
          path: .github/spring-github-workflows
          show-progress: false
          ref: ${{ env.WORKFLOWS_REF }}

      - name: Dispatch Workflow
        timeout-minutes: 30
        uses: ./.github/spring-github-workflows/.github/actions/spring-dispatch-workflow-and-wait
        with:
          workflow: ${{ inputs.verifyStagedWorkflow }}
          token: ${{ secrets.GITHUB_TOKEN }}
          inputs: '{ "releaseVersion": "${{ needs.releaseVersion.outputs.releaseVersion }}" }'

  promote-release:
    needs: [ releaseVersion, staging, verify-staged ]
    name: Promote ${{ needs.releaseVersion.outputs.releaseVersion }}
    uses: ./.github/workflows/spring-artifactory-promote-release.yml
    with:
      buildName: ${{ needs.staging.outputs.buildName }}
      buildNumber: ${{ needs.staging.outputs.buildNumber }}
      targetRepository: ${{ contains(needs.releaseVersion.outputs.releaseVersion, '-') && inputs.targetMilestoneRepository || inputs.targetReleaseRepository }}
      artifactoryProjectKey: ${{ inputs.artifactoryProjectKey }}
      runner: ${{ inputs.runner }}
    secrets: inherit

  deploy-to-central:
    needs: [ releaseVersion, staging, promote-release ]
    name: Deploy ${{ needs.releaseVersion.outputs.releaseVersion }} to Maven Central
    if: ${{ !inputs.bundleName && (!contains(needs.releaseVersion.outputs.releaseVersion, '-') || inputs.deployMilestoneToCentral) }}
    uses: ./.github/workflows/spring-artifactory-deploy-to-maven-central.yml
    with:
      buildName: ${{ needs.staging.outputs.buildName }}
      buildNumber: ${{ needs.staging.outputs.buildNumber }}
      runner: ${{ inputs.runner }}
    secrets: inherit

  spring-release-bundle:
    needs: [ releaseVersion, staging, promote-release ]
    name: Release Bundle for ${{ needs.releaseVersion.outputs.releaseVersion }}
    if: inputs.bundleName
    uses: ./.github/workflows/spring-enterprise-release-bundle.yml
    with:
      buildName: ${{ needs.staging.outputs.buildName }}
      buildNumber: ${{ needs.staging.outputs.buildNumber }}
      artifactoryUrl: ${{ inputs.artifactoryUrl }}
      bundleName: ${{ inputs.bundleName }}
      releaseVersion: ${{ needs.releaseVersion.outputs.releaseVersion }}
    secrets: inherit

  finalize:
    if: ${{ !(failure() || cancelled()) }}
    needs: [ releaseVersion, deploy-to-central, spring-release-bundle ]
    name: Finalize ${{ needs.releaseVersion.outputs.releaseVersion }}
    uses: ./.github/workflows/spring-finalize-release.yml
    with:
      milestone: ${{ needs.releaseVersion.outputs.releaseVersion }}
    secrets: inherit
